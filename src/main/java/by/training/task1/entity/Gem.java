//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.02.25 at 04:47:16 PM MSK 
//


package by.training.task1.entity;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import java.util.StringJoiner;

public class Gem implements Comparable<Gem> {
    protected String name;
    protected Origin origin;
    protected Color color;
    protected int transparency;
    protected double weight;
    protected String id;
    protected Boolean valuable;
    protected Quality quality;

    protected Gem() {

    }

    protected Gem(GemBuilder builder) {
        this.name = builder.name;
        this.origin = builder.origin;
        this.color = builder.color;
        this.transparency = builder.transparency;
        this.weight = builder.weight;
        this.id = builder.id;
        this.valuable = builder.valuable;
        this.quality = builder.quality;
    }

    public String getName() {
        return name;
    }

    public void setName(String value) {
        this.name = value;
    }

    public Origin getOrigin() {
        return origin;
    }

    public void setOrigin(Origin value) {
        this.origin = value;
    }

    public Color getColor() {
        return color;
    }

    public void setColor(Color value) {
        this.color = value;
    }

    public int getTransparency() {
        return transparency;
    }

    public void setTransparency(int value) {
        this.transparency = value;
    }

    public double getWeight() {
        return weight;
    }

    public void setWeight(double value) {
        this.weight = value;
    }

    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

    public boolean isValuable() {
        if (valuable == null) {
            return true;
        } else {
            return valuable;
        }
    }

    public void setValuable(Boolean value) {
        this.valuable = value;
    }

    public Quality getQuality() {
        return quality;
    }

    public void setQuality(Quality value) {
        this.quality = value;
    }

    @Override
    public int compareTo(Gem o) {
        return this.getId().compareTo(o.getId());
    }

    public static class GemBuilder<SELF extends GemBuilder<SELF>> {
        protected String name;
        protected Origin origin;
        protected Color color;
        protected int transparency;
        protected double weight;
        protected String id;
        protected Boolean valuable;
        protected Quality quality;

        public GemBuilder(GemBuilder builder) {
            this.name = builder.name;
            this.origin = builder.origin;
            this.color = builder.color;
            this.transparency = builder.transparency;
            this.weight = builder.weight;
            this.id = builder.id;
            this.valuable = builder.valuable;
            this.quality = builder.quality;
        }

        public GemBuilder(String name) {
            this.name = name;
        }

        public GemBuilder withOrigin(Origin origin) {
            this.origin = origin;
            return this;
        }

        public GemBuilder withColor(Color color) {
            this.color = color;
            return this;
        }

        public GemBuilder withTransparency(int transparency) {
            this.transparency = transparency;
            return this;
        }

        public GemBuilder withWeight(double weight) {
            this.weight = weight;
            return this;
        }

        public GemBuilder withId(String id) {
            this.id = id;
            return this;
        }

        public GemBuilder withValuable(Boolean valuable) {
            this.valuable = valuable;
            return this;
        }

        public GemBuilder withQuality(Quality quality) {
            this.quality = quality;
            return this;
        }

        public Gem build() {
            return new Gem(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(", ", "Gem{","}");
        return joiner
                .add(name + '\'')
                .add("id='" + id + '\'')
                .add("color=" + color)
                .add("origin=" + origin)
                .add("name='" + name + '\'')
                .add("transparency=" + transparency)
                .add("weight=" + weight)
                .add("valuable=" + valuable)
                .add("quality=" + quality)
                .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Gem gem = (Gem) o;

        if (transparency != gem.transparency) return false;
        if (Double.compare(gem.weight, weight) != 0) return false;
        if (!name.equals(gem.name)) return false;
        if (origin != gem.origin) return false;
        if (color != gem.color) return false;
        if (!id.equals(gem.id)) return false;
        if (!valuable.equals(gem.valuable)) return false;
        return quality == gem.quality;
    }

    @Override
    public int hashCode() {
        int result;
        long temp;
        result = name.hashCode();
        result = 31 * result + origin.hashCode();
        result = 31 * result + color.hashCode();
        result = 31 * result + transparency;
        temp = Double.doubleToLongBits(weight);
        result = 31 * result + (int) (temp ^ (temp >>> 32));
        result = 31 * result + id.hashCode();
        result = 31 * result + valuable.hashCode();
        result = 31 * result + (quality != null ? quality.hashCode() : 0);
        return result;
    }
}
